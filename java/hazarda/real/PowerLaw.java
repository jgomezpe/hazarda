/**
 * <p>Copyright: Copyright (c) 2019</p>
 *
 * <h3>License</h3>
 *
 * Copyright (c) 2019 by Jonatan Gomez-Perdomo. <br>
 * All rights reserved. <br>
 *
 * <p>Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * <ul>
 * <li> Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 * <li> Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 * <li> Neither the name of the copyright owners, their employers, nor the
 * names of its contributors may be used to endorse or promote products
 * derived from this software without specific prior written permission.
 * </ul>
 * <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNERS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 *
 *
 * @author <A HREF="http://disi.unal.edu.co/profesores/jgomezpe"> Jonatan Gomez-Perdomo </A>
 * (E-mail: <A HREF="mailto:jgomezpe@unal.edu.co">jgomezpe@unal.edu.co</A> )
 * @version 1.0
 */
package hazarda.real;

import hazarda.Hazarda;

/**
 * <p>Generates real numbers following a Generalized Power Law distribution.</p>
 *
 */
public class PowerLaw implements RealRandom{
	/**
	 * Exponential factor of the power law distribution
	 */
	protected double alpha;
    
	/**
	 * @param min Location of the power law distribution (kind of minimum value generated by the power law distribution)
	 */
	protected double min;

	/**
	 * @param max Scale factor of the power law (max-min)
	 */
	protected double max;
    
	/**
	 * Constructor: Creates a PowerLaw number generator following distribution PL(-2.0,1.0,0.0)
	 */
	public PowerLaw(){ this(-2.0); }

	/**
	 * Constructor: Creates a PowerLaw number generator following distribution PL(alpha,1.0,0.0)
	 * @param alpha Exponential factor of the power law distribution
	 */
	public PowerLaw(double alpha){ this(alpha,1.0,0.0); }

	/**
	 * Constructor: Creates a PowerLaw number generator following distribution PL(alpha,min,max)
	 * @param alpha Exponential factor of the power law distribution
	 * @param max Scale factor of the power law (max-min)
	 * @param min Location of the power law distribution (kind of minimum value generated by the power law distribution)
	 */
	public PowerLaw( double alpha, double min, double max ){
		this.alpha = alpha;
		this.min = min;
		this.max = max;
	}
  
	/**
	 * Generates a number following a power law distribution
	 * @return A number following a power law distribution
	 */
	@Override
	public double next() { return Hazarda.powerlaw(alpha,min,max); }    
}